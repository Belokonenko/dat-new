@charset "UTF-8";*,::after,::before{box-sizing:border-box}:where(ul, ol):where([class]){padding-left:0}:where(blockquote, figure):where([class]),body{margin:0}:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]){margin-block:0}:where(dd[class]){margin-left:0}:where(fieldset[class]){margin-left:0;padding:0;border:0}:where(ul[class]){list-style:none}p{--paragraphMarginBottom:24px;margin-block:0}p:where(:not([class]):not(:last-child)){margin-bottom:var(--paragraphMarginBottom)}img{display:block;max-width:100%}button,input,select,textarea{font:inherit}html{height:100%;scroll-behavior:smooth}body{min-height:100%;font-size:clamp(16px,1.2508686588vw,18px);font-family:var(--font-family-base);font-weight:400;line-height:1.28;color:var(--color-dark);background-color:var(--color-light)}svg [fill]{fill:currentColor}svg [stroke]{stroke:currentColor}svg *{transition-property:fill,stroke}@media (prefers-reduced-motion:reduce){*{animation-duration:.01ms!important;animation-iteration-count:1!important;transition-duration:.01ms!important;scroll-behavior:auto!important}}:root{--transition-duration:0.2s ease-in-out;--container-width:1240px;--container-padding-x:30px}@media (max-width:991.98px){:root{--container-padding-x:10px}}@media (max-width:767.98px){:root{--container-padding-x:5px}}.container{max-width:calc(var(--container-width) + var(--container-padding-x)*2);margin-inline:auto;padding-inline:var(--container-padding-x)}.visually-hidden{position:absolute!important;width:1px!important;height:1px!important;margin:-1px!important;border:0!important;padding:0!important;white-space:nowrap!important;clip-path:inset(100%)!important;clip:rect(0 0 0 0)!important;overflow:hidden!important}@media (max-width:767.98px){.hidden-mobile{display:none!important}}@media (min-width:768px){.visible-mobile{display:none!important}}a,button,input,svg *,textarea{transition-duration:var(--transition-duration)}a{text-decoration:none;color:inherit}h1,h2,h3,h4{font-weight:500}h1{font-size:clamp(43px,4.169562196vw,60px)}h2{font-size:clamp(36px,2.7797081306vw,40px)}h3{font-size:clamp(26px,2.084781098vw,30px)}h4{font-size:clamp(18px,1.3898540653vw,20px)}.button{cursor:pointer;user-select:none;outline:0;border:0;font:inherit;padding:0;background-color:transparent;line-height:1;white-space:nowrap;transform:var(--transition-duration)}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
